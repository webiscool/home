<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Web is Cool!</title>
    <link rel="icon" type="image/png" href="img/fav.png" />
<link rel="stylesheet" type="text/css" href="css/main.css" />
</head>
<body>
  <div>
  <p>
<span class="title">WebIsCool</span>
<p>
As you can see on <a href="https://github.com/webiscool" target="_blank">Github</a>, <span class="webiscool">WebIsCool</span> is first a small community of developers around web technos and open source.
</p>
</p>
</div>
  <div id="main">
</p>
<p>
But behind that name is also a <span class="code">young team</span> (3 now) of versatile and reactive freelancers who can handle:
<br>
<ul>
  <li>Responsive integration</li>
<li>Front-end & back-end development</li>
<li>Persistence and database management</li>
<li>CMS installations and customizations</li>
<li>DNS setup, Web hosting and Continuous integration</li>
<li>Permanent support (thanks to our different <a href="http://24timezones.com/horloge_mondiale.php" target="_blank">time zone location</a>: GMT -6, GMT +1, GMT +3)</li>
</ul>
</p>

<p>
Our watchwords are:

<span class="code">Reactivity, Versatility, Adaptability.</span>
<br><br>
Our goal is to create web pages with the <span class="code">technologies THAT FIT THE BEST the client needs.</span>
<br><br>
Why (even if it's simple), install a "cumbersome" WordPress which needs a server to mantain
<br> if our client won't make any administration with it?
</p>
<p>
We suggest <span class="code">the lightest solutions</span> whenever it is possible:
<br>
<ul>
<li>Using <a href="https://facebook.github.io/react/" target="_blank">ReactJS</a> for instance to make simple showcase websites.</li>
<li>If we need to send emails without local server we simply rely on the Google Mail API.</li>
<li>If we need to store datas in a simple and light-weight database,</li>
we can communicate "programmatically" with Google Spreadsheets so that the customer can also manage easily his datas<br>
 instead of the mysql | phpmyadmin solution requiring a learning curve for the client.</li>
<br><br>
(We also combine that solutions!)
</p>

<p>
Obviously if your project requires more complexity and needs local backends to administrate easily and to-measure,<br>
<span class="code">we can setup different kind of stacks</span> including: php, sql, redis, symfony, mongoDB and nodeJs.
<br><br>
But still in <span class="code">the most flexible way</span>. If your project requires only basic functions:
<br><br>
- It is possible to setup simple public httpS APIs that will store and fetch data from a redis server<br>
 thru <a href="https://aws.amazon.com/lambda/details/?nc1=h_ls" target="_blank">AWS lambda</a> functions instead of having "servers permanently listening"
</p>
Among the technologies we use: <img src="img/php.png" />&nbsp;
<img src="img/react.png" />&nbsp;
<img src="img/github.jpg" />&nbsp;
<img src="img/google-app-scripts-logo.png" />&nbsp;
<img src="img/aws.png" />&nbsp;
<img src="img/travis.png" />&nbsp;
<img src="img/docker.png" />&nbsp;
<img src="img/slack.png" />&nbsp;
<img src="img/redis.png" />&nbsp;
</div>
</body>
</html>
